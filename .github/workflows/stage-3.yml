name: Stage 3 â€” SSE & Observers (MCP)

on:
  pull_request:
    paths:
      - 'docs/**'
      - 'schema/**'
      - 'src/**'
      - 'scripts/**'
      - '.github/workflows/stage-3.yml'
  workflow_dispatch: {}

jobs:
  sse:
    runs-on: ubuntu-latest
    env:
      BRIDGE_URL: http://127.0.0.1:7171
      SSE_SMOKE: '1'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'pnpm'
      - run: corepack enable
      - run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm -s build
      - name: Prepare config
        run: |
          cp examples/mcp/config.example.toml $RUNNER_TEMP/config.toml
          echo 'dashboard_bridge = { enabled = true, port = 7171 }' >> $RUNNER_TEMP/config.toml
          echo '[audit]' >> $RUNNER_TEMP/config.toml
          echo 'dir = "'$RUNNER_TEMP'"' >> $RUNNER_TEMP/config.toml
      - name: Start server
        env:
          DEVOPS_MCP_CONFIG: ${{ runner.temp }}/config.toml
          BRIDGE_CORS: '1'
          BRIDGE_TEST_ENDPOINTS: '1'
        run: |
          node dist/index.js &
          echo $! > server.pid
          for i in {1..30}; do
            if curl -fsS $BRIDGE_URL/openapi.yaml >/dev/null; then break; fi; sleep 1; done
      - name: Emit synthetic event
        run: |
          curl -sSf -X POST "$BRIDGE_URL/api/test/emit-event" -H 'content-type: application/json' \
            -d '{"event":"CIEvent","run_id":"ci_stage3","tool":"ci","profile":"ci","project_id":"ci"}'
      - name: SSE validate
        env:
          OBS_BRIDGE_URL: ${{ env.BRIDGE_URL }}
        run: |
          node scripts/sse-validate.mjs --event CIEvent --limit=1 --timeoutMs=8000
      - name: Stop server
        if: always()
        run: |
          if [[ -f server.pid ]]; then kill $(cat server.pid) || true; fi
